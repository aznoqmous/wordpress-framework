#!/usr/bin/env php
<?php

use Addictic\WordpressFramework\Helpers\AssetsHelper;

$GLOBALS['_composer_bin_dir'] = __DIR__;
$GLOBALS['_composer_autoload_path'] = __DIR__ . '/../autoload.php';

require($GLOBALS['_composer_autoload_path']);

require_once __DIR__ . "/../../web/wp/wp-load.php";

\Addictic\WordpressFramework\WordpressFrameworkBundle::registerCommands();

$arguments = $argv;
$command = isset($argv[1]) ? $argv[1] : null;
array_splice($arguments, 0, 2);
if($command){
    \Addictic\WordpressFramework\Annotation\CommandManager::getInstance()
        ->run($command, $arguments)
    ;
}
else {
    echo "Available commands:\n";
    echo "________________________________________________________________\n\n";
    $commands = \Addictic\WordpressFramework\Annotation\CommandManager::getInstance()->entities;
    uksort($commands, function ($a,$b){
        return $a > $b ? 1 : -1;
    });
    $namespace = "";
    foreach($commands as $key => $command){
        $current_namespace = explode(":", $key)[0];
        if($namespace != $current_namespace) echo "\n";
        echo $key . "\t\t\t" . $command->class;
        if(property_exists($command, "method")) {
            echo "::{$command->method->name}(";
            echo implode(", ", array_map(function($param){
                return "$$param->name";
            }, $command->method->getParameters()));
            echo ")\n";
        }
        $namespace = $current_namespace;
    }
    echo "________________________________________________________________\n";
}

